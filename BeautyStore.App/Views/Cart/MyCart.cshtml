@using  BeautyStore.Models.Enum;
@model IEnumerable<CartModel>
@{
    ViewData["Title"] = "Корзина";
}
<style>
    .hover:hover {
        cursor: pointer;
    }

    .fontSizeRise:hover {
        font-size: 1.1rem;
    }

    .cart-line {
        height: 50px;
        border-bottom: 1px solid gray;
        margin-bottom: 3px;
    }



    .cart-title {
        width: calc(100% - 300px);
    }

    .buttons {
        position: absolute;
        right: 0px;
    }

        .buttons button,
        .buttons div {
            width: 100px;
        }

        .scope-info{
            border:1px solid gray;
            border-radius:3px;
            margin-top:15px;
        }
</style>
<div class="container-fluid h-100">
    <div class="row justify-content-center align-items-center h-100">
        <div class="col col-sm-10 col-md-10 col-lg-10 col-xl-10">
            <h3 class="text-center">Корзина</h3>
            @if (Model.Any())
            {
                @foreach (var cart in Model)
                {
                    <div class="container scope-info">
                        <div class="row ">
                            <div class="col-12 text-center branch-info" data-id="@cart.BranchId">
                                <h6> @cart.BranchTitle </h6>
                            </div>
                        </div>
                        @foreach (var product in cart.ProductCounts)
                        {
                            <div class="row product-info" data-price="@product.Key.Price" data-id="@product.Key.Id" data-branch="@cart.BranchId" data-cart="@cart.Id">
                                <div class="col-9">
                                    @product.Key.Title (@product.Key.Price Руб/Шт)
                                </div>
                                <div class="col-2 text-center">
                                    <span class="glyphicon glyphicon-plus hover fontSizeRise productPlus" style="color:green" aria-hidden="true"></span>
                                    <span class="product-count">@product.Value</span>
                                    <span class="glyphicon glyphicon-minus red hover fontSizeRise productMinus" style="color:red" aria-hidden="true"></span>
                                </div>
                                <div class="col-1">
                                    <span class="glyphicon glyphicon-trash fontSizeRise hover productTrash" style="color:red" aria-hidden="true"></span>
                                </div>
                            </div>


                        }
                    </div>
                    
                    <div class="row" style="margin-top:10px;">
                        <div class="col-4"></div>
                        <div class="col-4">
                            <div class="text-right k-oplate">К оплате : @cart.ProductCounts.Sum(y => y.Key.Price * y.Value)</div>
                        </div>
                        <div class="col-4">
                            <div class="btn btn-success w-100">Оплатить</div>
                        </div>
                    </div>
                }

            }
            else
            {
                <h4>Товаров в корзине нет</h4>
            }
        </div>
    </div>
</div>
<script>
    let reBalance = function (scope) {
        let sum = 0;
        var products = scope.find('.product-info');
        for (var product of products) {
            let priceStr = $(product).data('price').replace(",", ".");
            let price = Number.parseFloat(priceStr);    
            let count = Number.parseInt($(product).find('.product-count').text());
            sum += (count * price);
        }
        return sum;
    }

    $('.productMinus').on('click', function () {
        let scope = $(this).closest('.scope-info');
        let kOplate = scope.next().find('.k-oplate');
        let parent = $(this).closest('.product-info');
        let productId = parent.data('id');
        let cart = parent.data('cart');
        let countBlock = parent.find('.product-count');
        let count = Number.parseInt(countBlock.text());
        if (count == 1) {
            parent.find('.productTrash').click();
            return
        }
        $.ajax({
            url: `/cart/cartMinus?cartId=${cart}&productId=${productId}`,
            statusCode: {
                200: function (data) {
                    count--;
                    countBlock.text(count);
                    kOplate.text(`К оплате : ${reBalance(scope)}`);
                }
            }
        })
    })
    $('.productPlus').on('click', function () {
        let scope = $(this).closest('.scope-info');
        let kOplate = scope.next().find('.k-oplate');
        let parent = $(this).closest('.product-info');
        let productId = parent.data('id');
        let branchId = parent.data('branch');
        let countBlock = parent.find('.product-count');
        let cartId = parent.data('cart');
        let count = Number.parseInt(countBlock.text());
        $.ajax({
            url: `/cart/ProductCount?productId=${productId}&branchId=${branchId}`,
            statusCode: {
                200: function (data) {
                    if (data < count) { alert('На складе отсутсвует указанное кол-во.'); return; }
                    $.ajax({
                        url: `/cart/cartPlus?cartId=${cartId}&productId=${productId}`,
                        statusCode: {
                            200: function (data) {
                                count++;
                                countBlock.text(count);  
                                kOplate.text(`К оплате : ${reBalance(scope)}`);
                            }
                        }
                    })
                }
            }
        })
        
    })
    $('.productTrash').on('click', function () {
        if (!confirm("Вы уверены?")) return;

        let scope = $(this).closest('.scope-info');
        let kOplate = scope.next().find('.k-oplate');
        let parent = $(this).closest('.product-info');
        let productId = parent.data('id');
        let countBlock = parent.find('.product-count');
        let cartId = parent.data('cart');
        $.ajax({
            url: `/cart/CartProductTrash?cartId=${cartId}&productId=${productId}`,
            statusCode: {
                200: function (data) {
                    parent.remove();
                    kOplate.text(`К оплате : ${reBalance(scope)}`);
                }
            }
        })
    })

</script>


<script>
    $('.payBtn').on('click', function (context) {
        let el = $(context.target);
        let productId = el.data('product-id');
        let cartId = el.data('cart-id');

        $.get('/cart/IsPaymentPossible?productId=' + productId, function (data) {

            if (data) {
                $.get('/cart/Pay?cartId=' + cartId, function () {
                    window.location.href = `/cart/MyCart`;
                });
            }
            else
                alert("К сожалению, товар закончился");
        })
    });

    $('.removeBtn').on('click', function (context) {
        let el = $(context.target);
        let cartId = el.data('cart-id');

        $.get('/cart/remove?cartId=' + cartId, function (data) {
            window.location.href = `/cart/MyCart`;
        });
    });
</script>